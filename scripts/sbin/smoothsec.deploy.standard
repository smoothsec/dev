#!/bin/bash
#phillip.bailey@smoothsec.org
clear
echo""
echo -e "\033[1;33m*** Welcome to SmoothSec Standard setup Wizard [Snorby + Sensors]***\n
The setup wizard will guide you to configure SmoothSec for the first time.
Please follow the setup wizard step by step to complete the basic configuration.\033[0m"
echo""
echo -e "\033[1;33mThe Wizard will guide you  through the following steps:
1.Set root password for local login.(NO SSH LOGIN FOR ROOT.)
1.Set SmoothSec user account and  password.(SSH and SUDO ALLOWED.)
2.Choose the IDS engine (Snort or Suricata).
3.Set the network interface to listen to.
4.Configure the Local Area Network.
5.Set Snorby web interface username and password.
6.Snorby automatic database setup.\033[0m"

echo""
echo -e "\033[1;31mChanging root password -  Please choose a strong one!\033[0m\n"
/usr/bin/passwd
EXIT=$?

if [[ $EXIT != 0 ]]; then

echo "EXIT"

exit

fi
echo ""
echo -e "\033[1;33mSmoothSec user setup\033[0m\n"
echo "Enter a username for the new SmoothSec user. Your first name is a 
reasonable choice. The username should start with a lower-case letter."
echo ""
read -p "Enter your username : " USER_ACCOUNT
echo ""
useradd $USER_ACCOUNT -m  --shell /bin/bash
echo""
echo "Select a password for the new SmoothSec user. A good password will contain
a mixture of letters, numbers and punctuation."
echo""
passwd $USER_ACCOUNT

if [ "$?" -ne "0" ]; then
      passwd $USER_ACCOUNT  
fi

cp  /usr/local/smoothsec/user_env/.bashrc /home/$USER_ACCOUNT/
cp /usr/local/smoothsec/user_env/.vimrc /home/$USER_ACCOUNT/
chown $USER_ACCOUNT.$USER_ACCOUNT /home/$USER_ACCOUNT/.bashrc
chown $USER_ACCOUNT.$USER_ACCOUNT /home/$USER_ACCOUNT/.vimrc
adduser $USER_ACCOUNT  sudo

update-rc.d sagan defaults > /dev/null 2>&1
update-rc.d snorby defaults > /dev/null 2>&1
update-rc.d apache2  defaults > /dev/null 2>&1
update-rc.d snorby  defaults > /dev/null 2>&1
update-rc.d arpalert defaults > /dev/null 2>&1

/usr/sbin/make-ssl-cert  generate-default-snakeoil --force-overwrite > /dev/null 2>&1
chmod +x /etc/init.d/ssh
dpkg-reconfigure openssh-server > /dev/null 2>&1
update-rc.d ssh defaults > /dev/null 2>&1
cp /usr/local/smoothsec/rc.local.default /etc/rc.local
chmod +x /etc/rc.local
echo "DEPLOYMENT=standard"  >> /etc/smoothsec.cfg
#samiux tip
touch /etc/apt/sources.list.d/smoothsec.list
sed -i '/cdrom/d' /etc/apt/sources.list
echo "#deb http://repo.percona.com/apt wheezy main" >> /etc/apt/sources.list.d/smoothsec.list
echo "#deb-src http://repo.percona.com/apt wheezy main" >> /etc/apt/sources.list.d/smoothsec.list
echo "#deb http://http.us.debian.org/debian stable main contrib non-free" >> /etc/apt/sources.list.d/smoothsec.list
echo "deb http://mirrors.supportex.net/mariadb/repo/5.5/debian wheezy main" >> /etc/apt/sources.list.d/smoothsec.list
echo "deb-src http://mirrors.supportex.net/mariadb/repo/5.5/debian wheezy main"  >> /etc/apt/sources.list.d/smoothsec.list
#end samiux tip
function email_setup() {
echo -e "\033[1;33mSnorby setup..\033[0m\n"
echo "Snorby Username (your_name@your_email.com) and Password creation." 
echo""
read -p "Please enter your email address: "  SMOOTHSEC_EMAIL
echo""
read -p "Please confirm your email address: " SMOOTHSEC_EMAIL1
echo""
}

function  password_prompt() {
read -p "Please enter your desired Snorby password (Choose a strong one!):" -s SMOOTHSEC_PASSWORD
echo""
read -p "Please confirm your desired Snorby password:" -s SMOOTHSEC_PASSWORD1
echo""
}

function snorby_setup() { 
sed -i "s|SMOOTHSEC_EMAIL|$SMOOTHSEC_EMAIL1|g" /var/www/snorby/db/seeds.rb 
sed -i "s|SMOOTHSEC_PASSWORD|$SMOOTHSEC_PASSWORD1|g" /var/www/snorby/db/seeds.rb
echo""
sleep 2
echo "*** Please wait while the setup installs Snorby database. ***"
echo""
chown -R www-data.www-data /var/www/snorby/
su www-data -c "cd /var/www/snorby; bundle exec rake snorby:setup RAILS_ENV=production" >> /var/log/snorby_install.log 2>&1 
sleep 2

if grep --quiet "Adding jobs to the queue" /var/log/snorby_install.log; then
         

       echo -e "\033[1;33m*** CONGRATULATIONS! Your SmoothSec setup has been successfully completed! ***\033[0m\n"
       echo "SmoothSec user accounts."
       echo""
       echo "Snorby web interface login:          "$SMOOTHSEC_EMAIL
       echo "SmoothSec user account.(SSH + SUDO): "$USER_ACCOUNT 
       echo "SmoothSec local login.(NO SSH):      ""root"
       echo""
       echo -e "\033[1;33mPlease reboot Smooth-sec typing:\033[0m  reboot\n"
else
       echo "Oops, something went wrong, please check the /var/log/snorby_install.log file"
fi
}

echo""
echo -e "\033[1;33mIDS engine setup.\033[0m\n"
echo -e "\033[1;33mPlease select the Intrusion Detection Engine that you want to use.\033[0m\n"
PS3='Please enter your choice (type 1 for Snort or 2 for Suricata):'
options=("snort" "suricata")

select opt in "${options[@]}"
do
    case $opt in
        "snort")
            echo"" 
            echo "You chose Snort."
            echo""
            echo -e "\033[1;33mNetwork setup..\033[0m\n"
            echo "Interface - IP Address" 
            /sbin/ifconfig |grep -B1 "inet addr" |awk '{ if ( $1 == "inet" ) { print $2 } else if ( $2 == "Link" ) { printf "%s:" ,$1 } }'|sed -e '/lo/d' |awk -F: '{ print $1 "        " $3 }'  
            echo"" 
            echo  "Enter the interface to monitor:" 
            read -p "(only one interface is allowed,e.g. eth0):" VAR_INPUT
            echo 'INTERFACE_DEF='$VAR_INPUT >> /etc/smoothsec.cfg
            SENSOR_IP=$(/sbin/ifconfig $VAR_INPUT | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}' | sed -e 's/127.0.0.1//g')
            sed -i "s|anynet|$SENSOR_IP|" /etc/sagan/sagan.conf
            sed -i "s|demo.snorby.org|$SENSOR_IP|" /var/www/snorby/config/snorby_config.yml
            echo""     
            echo  "Enter the address range for the local network"
            read -p "(e.g. 192.168.1.0/24):" VAR_NET
            sed -i "s|ipvar HOME_NET any|ipvar HOME_NET ${VAR_NET}|" /etc/snort/snort.conf
            sed -i "s|anynet|${VAR_NET}|" /etc/suricata/suricata.yaml
            echo""
            echo "#RULES variable affects only snort. If you change it you need
#to run smoothsec.snortrules.update"  >> /etc/smoothsec.cfg
            echo "#If you switch from "et" to "vrt" rules you must insert your 
#oinkcode into /etc/pulledpork/snort/vrt.pulledpork.conf" >> /etc/smoothsec.cfg
            sed -i "s|#interface = eth0|interface = $VAR_INPUT|" /etc/arpalert/arpalert.conf
            echo 'RULES=et' >> /etc/smoothsec.cfg
            echo "#Delete Snort/Suricata/Sagan unified files older than x-days" >> /etc/smoothsec.cfg
            echo 'DAYS=3'  >> /etc/smoothsec.cfg
            echo "#Default IDS/IPS, to change  IDS/IPS, run smoothsec.switch.engine" >> /etc/smoothsec.cfg
            echo 'ENGINE=snort'  >> /etc/smoothsec.cfg
            echo 'MODE=ids'  >> /etc/smoothsec.cfg
            echo "SENSOR_IP=$SENSOR_IP" >> /etc/smoothsec.cfg
            echo "HOME_NETWORK=$VAR_NET" >> /etc/smoothsec.cfg
            update-rc.d snort defaults > /dev/null 2>&1
            update-rc.d sagan defaults > /dev/null 2>&1
            crontab /usr/local/smoothsec/cronempty
            crontab /usr/local/smoothsec/cronsnort 
            echo ""
            while :; do
            email_setup
            if [ $SMOOTHSEC_EMAIL != $SMOOTHSEC_EMAIL1 ]; 
            then
            echo""
            echo -e "\033[31mEmail address do not match, try again..\033[0m\n"
            continue
            email_setup
            else
            break
            fi
            done

            while :; do
            password_prompt
            if  [ $SMOOTHSEC_PASSWORD != $SMOOTHSEC_PASSWORD1 ] 
            then
            echo -e "\033[31mPasswords do not match, try again..\033[0m\n"
            continue
            password_prompt 
            else
            snorby_setup
            exit
            fi 
            done
            			
            ;;
        "suricata")
            echo"" 
            echo "You chose Suricata."
            echo""
            echo -e "\033[1;33mNetwork setup..\033[0m\n"
            echo "Interface - IP Address" 
            /sbin/ifconfig |grep -B1 "inet addr" |awk '{ if ( $1 == "inet" ) { print $2 } else if ( $2 == "Link" ) { printf "%s:" ,$1 } }'|sed -e '/lo/d' |awk -F: '{ print $1 "        " $3 }'  
            echo""
            echo  "Enter the interface to monitor,"
            read -p "(only one interface is allowed,e.g. eth0):" VAR_INPUT
            echo 'INTERFACE_DEF='$VAR_INPUT >> /etc/smoothsec.cfg
            SENSOR_IP=$(/sbin/ifconfig $VAR_INPUT | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}' | sed -e 's/127.0.0.1//g')
            sed -i "s|anynet|$SENSOR_IP|" /etc/sagan/sagan.conf
            sed -i "s|demo.snorby.org|$SENSOR_IP|" /var/www/snorby/config/snorby_config.yml
            echo""
            echo  "Enter the address range for the local network"
            read -p "(e.g. 192.168.1.0/24):" VAR_NET
            sed -i "s|anynet|${VAR_NET}|" /etc/suricata/suricata.yaml
            sed -i "s|ipvar HOME_NET any|ipvar HOME_NET ${VAR_NET}|" /etc/snort/snort.conf
            echo""
            echo "#RULES variable affects only snort. If you change it you need
#to run smoothsec.snortrules.update" >> /etc/smoothsec.cfg
            echo "#If you switch from "et" to "vrt" rules you must insert your 
#oinkcode into /etc/pulledpork/snort/vrt.pulledpork.conf" >> /etc/smoothsec.cfg
            sed -i "s|#interface = eth0|interface = $VAR_INPUT|" /etc/arpalert/arpalert.conf
            echo 'RULES=et' >> /etc/smoothsec.cfg
            echo "#Delete Snort/Suricata/Sagan unified files older than x-days" >> /etc/smoothsec.cfg
            echo 'DAYS=3'  >> /etc/smoothsec.cfg
            echo "#Default IDS/IPS, to change IDS/IPS, run smoothsec.switch.engine" >> /etc/smoothsec.cfg
            echo 'ENGINE=suricata'  >> /etc/smoothsec.cfg
            echo 'MODE=ids'  >> /etc/smoothsec.cfg
            echo "SENSOR_IP=$SENSOR_IP" >> /etc/smoothsec.cfg
            echo "HOME_NETWORK=$VAR_NET" >> /etc/smoothsec.cfg
            update-rc.d suricata defaults > /dev/null 2>&1
            update-rc.d sagan defaults > /dev/null 2>&1
            crontab /usr/local/smoothsec/cronempty
            crontab /usr/local/smoothsec/cronsuricata
            while :; do
            email_setup
            if [ $SMOOTHSEC_EMAIL != $SMOOTHSEC_EMAIL1 ]; 
            then
            echo""
            echo -e "\033[31mEmail address do not match, try again..\033[0m\n"
            continue
            email_setup
            else
            break
            fi
            done

            while :; do
            password_prompt
            if  [ $SMOOTHSEC_PASSWORD != $SMOOTHSEC_PASSWORD1 ] 
            then
            echo -e "\033[31mPasswords do not match, try again..\033[0m\n"
            continue
            password_prompt 
            else
            snorby_setup
            #break
            exit 
            fi 
            done 

           ;;
        *) echo invalid option;;
    esac
done
