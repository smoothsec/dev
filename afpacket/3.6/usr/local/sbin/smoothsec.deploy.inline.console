#!/bin/bash

# To deploy AF_PACKET inline - console
# phillip.bailey@smoothsec.org
# samiux@smoothsec.org

PROCESS_NUM=`pgrep -f sagan`
if [ ! -z "$PROCESS_NUM" ]; then
        echo ""
        echo "IDS/IPS has been setup.  You cannot do over on it.  Exit."
        exit
fi

cp /usr/local/smoothsec/confs/afpacket/afpacket.cfg /etc/

# Message to display
clear
echo""
echo -e "\033[1;33m*** Welcome to SmoothSec (Inline Mode) Setup Wizard [Snorby Console]***\n
The setup wizard will guide you to configure and deploy
SmoothSec as mmanagement console to view and classify 
multiple and remote sensor alerts. Please follow the setup
wizard step by step to complete the basic configuration.\n

The Wizard will guide you  through the following steps:
1. Set root password for local login.(NO SSH LOGIN FOR ROOT.)
2. Set SmoothSec user account and password.(SSH and SUDO ALLOWED.)
3. Set Snorby web interface username and password.
4. Snorby automatic database setup.\033[0m"

# Set the root password
echo""
echo -e "\033[1;31mChanging root password -  Please choose a strong one!\033[0m\n"
/usr/bin/passwd
EXIT=$?

if [[ $EXIT != 0 ]]; then
	echo "EXIT"
	exit
fi

# Set the console box username and password
echo ""
echo -e "\033[1;33mSmoothSec Console user setup\033[0m\n"
echo "Enter a username for the new Console user. Your first name is a 
reasonable choice. The username should start with a lower-case letter."
echo ""
read -p "Enter your username : " USER_ACCOUNT
echo ""
useradd $USER_ACCOUNT -m  --shell /bin/bash
echo""
echo "Select a password for the new SmoothSec user. A good password will contain
a mixture of letters, numbers and punctuation."
echo""
passwd $USER_ACCOUNT

if [ "$?" -ne "0" ]; then
      passwd $USER_ACCOUNT  
fi

# Do the setup
cp  /usr/local/smoothsec/user_env/.bashrc /home/$USER_ACCOUNT/
cp /usr/local/smoothsec/user_env/.vimrc /home/$USER_ACCOUNT/
chown $USER_ACCOUNT.$USER_ACCOUNT /home/$USER_ACCOUNT/.bashrc
chown $USER_ACCOUNT.$USER_ACCOUNT /home/$USER_ACCOUNT/.vimrc
adduser $USER_ACCOUNT  sudo

cp /usr/local/smoothsec/rc.local.console  /etc/rc.local
chmod +x /etc/rc.local
update-rc.d sagan defaults  > /dev/null 2>&1
update-rc.d snorby defaults > /dev/null 2>&1
update-rc.d apache2  defaults > /dev/null 2>&1
update-rc.d snorby  defaults > /dev/null 2>&1
update-rc.d arpalert defaults > /dev/null 2>&1
update-rc.d -f suricata remove > /dev/null 2>&1
update-rc.d -f snort remove > /dev/null 2>&1
/usr/sbin/make-ssl-cert  generate-default-snakeoil --force-overwrite > /dev/null 2>&1
chmod +x /etc/init.d/ssh
dpkg-reconfigure openssh-server > /dev/null 2>&1
update-rc.d ssh defaults > /dev/null 2>&1

# Set the DEPLOYMENT to console
sed -i "s|DEPLOYMENT=none|DEPLOYMENT=console|" /etc/afpacket.cfg

#samiux tip
touch /etc/apt/sources.list.d/smoothsec.list
sed -i '/cdrom/d' /etc/apt/sources.list
echo "#deb http://repo.percona.com/apt wheezy main" >> /etc/apt/sources.list.d/smoothsec.list
echo "#deb-src http://repo.percona.com/apt wheezy main" >> /etc/apt/sources.list.d/smoothsec.list
echo "#deb http://http.us.debian.org/debian stable main contrib non-free" >> /etc/apt/sources.list.d/smoothsec.list
echo "deb http://mirrors.supportex.net/mariadb/repo/5.5/debian wheezy main" >> /etc/apt/sources.list.d/smoothsec.list
echo "deb-src http://mirrors.supportex.net/mariadb/repo/5.5/debian wheezy main"  >> /etc/apt/sources.list.d/smoothsec.list
#echo "deb http://ftp.us.debian.org/debian/ wheezy-backports main" >> /etc/apt/sources.list.d/smoothsec.list
#echo "deb-src http://ftp.us.debian.org/debian/ wheezy-backports main" >> /etc/apt/sources.list.d/smoothsec.list
#end samiux tip

# Function of email_setup
function email_setup() {
echo -e "\033[1;33mSnorby setup..\033[0m\n"
echo "Snorby Username (your_name@your_email.com) and Password creation." 
echo""
read -p "Please enter your email address: "  SMOOTHSEC_EMAIL
echo""
read -p "Please confirm your email address: " SMOOTHSEC_EMAIL1
echo""
}

# Function of password_prompt
function  password_prompt() {
read -p "Please enter your desired Snorby password (Choose a strong one!):" -s SMOOTHSEC_PASSWORD
echo""
echo""
read -p "Please confirm your desired Snorby password:" -s SMOOTHSEC_PASSWORD1
echo""
}

# Function of snorby_setup
function snorby_setup() { 
sed -i "s|SMOOTHSEC_EMAIL|$SMOOTHSEC_EMAIL1|g" /var/www/snorby/db/seeds.rb 
sed -i "s|SMOOTHSEC_PASSWORD|$SMOOTHSEC_PASSWORD1|g" /var/www/snorby/db/seeds.rb
echo""
sleep 2
echo "*** Please wait while the setup installs Snorby database. ***"
echo""
chown -R www-data.www-data /var/www/snorby/
su www-data -c "cd /var/www/snorby; bundle exec rake snorby:setup RAILS_ENV=production" >> /var/log/snorby_install.log 2>&1 
sleep 2

# After setting up, display information
if grep --quiet "Adding jobs to the queue" /var/log/snorby_install.log; then
       echo -e "\033[1;33m*** CONGRATULATIONS!***\n
Your SmoothSec Console setup has been successfully completed!\033[0m\n"
       echo""
       echo "SmoothSec user accounts."
       echo""
       echo "Snorby web interface login:          "$SMOOTHSEC_EMAIL
       echo "SmoothSec user account.(SSH + SUDO): "$USER_ACCOUNT 
       echo "SmoothSec local login.(NO SSH):      ""root"
       echo""
       echo -e "\033[1;33mPlease reboot Smooth-sec typing:\033[0m  reboot\n"
else
       echo "Oops, something went wrong, please check the /var/log/snorby_install.log file"
fi
}

# run smoothsec.afpacket.standard.setup
smoothsec.afpacket.standard.setup

# Main routine
echo ""
while :; do
	email_setup
        if [ $SMOOTHSEC_EMAIL != $SMOOTHSEC_EMAIL1 ]; then 
        	echo""
        	echo -e "\033[31mEmail address do not match, try again..\033[0m\n"
            	continue
            	email_setup
        else
            	break
        fi
done

while :; do
	password_prompt
        if  [ $SMOOTHSEC_PASSWORD != $SMOOTHSEC_PASSWORD1 ]; then 
        	echo -e "\033[31mPasswords do not match, try again..\033[0m\n"
            	continue
            	password_prompt 
        else
            	snorby_setup
            	exit
        fi 
done
            			
